#ifndef __FC_SOUND_PLAY_DEFINITIONS_H__
#define __FC_SOUND_PLAY_DEFINITIONS_H__

enum SOUND_CTGY{
	SC_NONE = -1,
	SC_COMMON,
	SC_WALK,
	SC_RUN,
	SC_JUMP,
	SC_DASH,
	SC_DOWN,
	SC_DOWN_ROLL,
	SC_HORSE_WALK,
	SC_HORSE_RUN,
	SC_HORSE_JUMP,
	SC_HORSE_STOP,
	SC_HIT,	
	SC_DEFENSE,
	SC_ATTACK_BASIC,
	SC_ATTACK_REPEAT,
	SC_ATTACK_FINISH,
	SC_ADD_ORB,
	SC_LEADER_ATTACK_BASIC,
	SC_LEADER_ATTACK_REPEAT,
	SC_LEADER_ATTACK_FINISH,
	SC_RANDOM_30,
	SC_CTGY_LAST

};

enum SOUND_AMOR_STYLE
{
	AMST_NONE=-1,
	AMST_HEAVY,
	AMST_LIGHT,
	AMST_TROLL,
	//아래는 약간 특수한 경우
	AMST_DRAGON,
	AMST_CATAPULT,//발석차
	AMST_SEI, //공성병기
	AMST_NIGHT,
	AMST_VIGKVAGK

};

enum SOUND_FLOOR_TYPE
{
	FT_NONE = -1,
	FT_SOIL,
	FT_ROCK,
	FT_GRASS,
	FT_SNOW,
	FT_WATER,
};


enum SOUND_WEAPON_TYPE
{
	WT_NONE = -1,
	WT_SWORD,
	WT_SPEAR,
	WT_CLUB,
	WT_BOW,
	WT_EMPTYHAND,
	WT_INPHYY,
	WT_ASPHARR,
	WT_MYIFEE,
	WT_TYURRU,
	WT_KLARRANN,
	WT_DWINGVATT,
	WT_VIGKVAGK,
	WT_LEUU,
	WT_DWYKFARRO
};



enum SOUND_WEAPON_USING_TYPE
{
	WUT_NONE = -1,
	WUT_ONEHAND,
	WUT_TWOHAND,
};

enum SOUND_CHAR_WEIGHT
{
	WEIGHT_NONE = -1,
	WEIGHT_HEAVY,
	WEIGHT_LIGHT
};

enum SOUND_ATTACK_TYPE{
	ATT_NONE = -1,
	ATT_SLASH,
	ATT_PIERCE,
	ATT_CHOP,
	ATT_LITTLE,
	ATT_BIG,
	ATT_SKIP,
};

enum SOUND_PROP_MATERIAL
{
	SPM_NONE = 0,	
	SPM_TREE_STRUCTURE,
	SPM_TREE_PIECE,
	SPM_ROCK_PIECE,
	SPM_ROCK,
	SPM_BRIDGE,
	SPM_STONE_STATUE,
	SPM_DESTROY_WALL,

};
enum SOUND_PROP_STATE
{
	SPS_NONE=-1,
	SPS_ATTACKED,
	SPS_DESTROYED,
	SPS_CRASH_FLOOR_SMALL,
	SPS_CRASH_FLOOR_BIG,
	SPS_CRASH_WATER_SMALL,
	SPS_CRASH_WATER_BIG,	
};

struct PropSoundInfo
{
	SOUND_PROP_MATERIAL nPropMaterial;
	SOUND_PROP_STATE nPropState;
	char *szCueName;
};

enum SOUND_NO_SKIP_UNIT_SOX
{
	SNSU_TROLL = 75,
	SNSU_LAST
};

enum NPC_SOUND_ID
{
	EM_99_GUARD,
	EM_99_ATTACK_01,
	EM_99_ATTACK_02,
	EM_99_ATTACK_03,
	EM_99_ATTACK_04,
	EM_99_ATTACK_05,
	EM_99_WARP_01,
	EM_99_WARP_02,
	EM_99_DASH_01,
	EM_99_DASH_02,
	EM_99_DASH_03,
	EM_99_FLY_01,
	EM_99_FLY_02,
	EM_99_FLY_03,
	EM_99_SUMMON_02,
	EM_99_HIT_01,
	EM_99_HIT_02,
	EM_99_HIT_03,
	EM_99_HIT_04,
	EM_99_STAND_01,
	EM_99_WALK_01,
	EM_DF_DASH_01,
	EM_DF_DASH_02,
	EM_DF_WALK_01,
	EM_DF_RUN_01,
	EM_DF_DEFENSE_01,
	EM_DF_DEFENSE_02,
	EM_DF_ATTACK_01,
	EM_DF_ATTACK_02,
	EM_DF_ATTACK_03,
	EM_DF_ATTACK_04,
	EM_DF_ATTACK_05,
	EM_LE_GUARD_01,
	EM_LE_GUARD_02,
	EM_LE_WALK,
	EM_LE_RUN,
	EM_LE_ATTACK_01,
	EM_LE_ATTACK_02,
	EM_LE_ATTACK_03,
	EM_LE_ATTACK_04,
	EM_LE_ATTACK_05,
	EM_LE_ATTACK_06,
	EM_LE_ATTACK_07,
	EM_LE_ATTACK_08,
	EM_YR_ATTACK_01,
	EM_YR_ATTACK_02,
	EM_YR_ATTACK_03,
	EM_YR_ATTACK_04,
	EM_YR_DASH_01,
	EM_YR_DASH_02,
	EM_YR_GUARD_01,
	EM_PY_ATTACK_01,
	EM_PY_ATTACK_02,
	EM_PY_ATTACK_03,
	EM_PY_ATTACK_04,
	EM_PY_ATTACK_05,
	EM_PY_BACK_01,
	EM_PY_DASH_01,
	EM_PT_FOOT,
	EM_PT_ATTACK_01,
	EM_PT_ATTACK_02,
	EM_PT_ATTACK_03,
	EM_PT_ATTACK_04,
	EM_PT_ATTACK_05,
	EM_GP_VOICE,
	EM_GP_DEAD,
	EM_GP_MAGIC_01,
	EM_GP_MAGIC_02,
	EM_GP_MAGIC_03,
	EM_GP_MAGIC_04,
	EM_GP_MAGIC_05,
	EM_KG_ATTACK_01,
	EM_KG_ATTACK_02,
	EM_KG_ATTACK_03,
	EM_KG_ATTACK_04,
	EM_KG_ATTACK_05,
	EM_KG_ATTACK_06,
	EM_SM_WALK_01,
	EM_SM_HIT_01,
	EM_SM_HIT_02,
	EM_SM_ATTACK_01,
	EM_SM_ATTACK_02,
	EM_SM_ATTACK_03,
	EM_SM_ATTACK_04,
	EM_SM_ATTACK_05,
	EM_SM_ATTACK_06,
	EM_SM_ATTACK_07,
	EM_SM_DASH_01,
	EM_MM_WALK_01,
	EM_MM_HIT_01,
	EM_MM_HIT_02,
	EM_MM_ATTACK_01_A,
	EM_MM_ATTACK_01_B,
	EM_MM_ATTACK_02,
	EM_MM_ATTACK_03,
	EM_9S_WALK_01,
	EM_9S_ATTACK_01,
	EM_9S_ATTACK_02,
	EM_TT_ATTACK_01,
};

#endif
