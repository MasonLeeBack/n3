// Copyright 2005 Microsoft Corporation

#include "stdafx.h"
#include "SimpleFont.h"

#ifdef USE_MGSTOOLBOX

#include <xtl.h>
#include <xgraphics.h>
#include <stdio.h>

#include "Utils.h"
#include "GPUStateSave.h"

namespace MGSToolbox {

namespace SimpleFont {

//-----------------------------------------------------------------------------

struct FontData
{
	bool bInstalled;

	int charWidth;
	int charHeight;
	int charPitch; // characters per row
	int charStart; // first ascii character in the font
	int charEnd;   // last ascii character in the font

	int textureWidth;
	int textureHeight;

	IDirect3DTexture9 * pTexture;

	int sourceWidth;
	int sourceHeight;

	char * sourceData;

	//----------

	void Install ( void )
	{
		if(bInstalled) return;

		pTexture = new IDirect3DTexture9;

		DWORD dwTextureSize = XGSetTextureHeader( textureWidth, textureHeight, 1, 0, D3DFMT_L8, 0,0, 0, 0, pTexture, NULL, NULL ); 

		char * pBuffer = (char*)XPhysicalAlloc( dwTextureSize, MAXULONG_PTR, 0, PAGE_READWRITE | PAGE_WRITECOMBINE );

		POINT point = {0,0};
		RECT rect = {0,0,sourceWidth,sourceHeight};
		XGTileSurface(pBuffer,textureWidth,textureHeight,&point,sourceData,sourceWidth,&rect,1);

		for(int i = 0; i < textureWidth*textureHeight; i++)
		{
			char c = pBuffer[i];

			pBuffer[i] = (c == '#') ? 255 : 0;
		}

		XGOffsetResourceAddress( pTexture, pBuffer ); 

		pTexture->AddRef();

		bInstalled = true;
	}

	void Remove ( void )
	{
		pTexture->Release();
	}
};

FontData g_font_6x10 = 
{
	false,
	6,10,16,
	32,127,
	128,64,NULL,
	96,64,
	".............#.#............................#......#...#......................................#."
	"........#....#.#..........#..........##.....#.....#.....#.....................................#."
	"........#....#.#...#.#...####..#...##..#....#....#.......#....#.....#........................#.."
	"........#.........#####.#.#...#.#.#.#..#.........#.......#..#.#.#...#........................#.."
	"........#..........#.#...###...#.#...##..........#.......#...###..#####.......#####.........#..."
	"........#..........#.#....#.#...#.#.#..#.#.......#.......#..#.#.#...#.......................#..."
	"..................#####.####...#.#.##...#........#.......#....#.....#......................#...."
	"........#..........#.#....#...#...#..###.#........#.....#.................#...........#....#...."
	"...................................................#...#.................#................#....."
	"................................................................................................"
	"................................................................................................"
	".###....#....###...###.....#..#####...##..#####..###...###.................................###.."
	"#...#..##...#...#.#...#...##..#......#........#.#...#.#...#.................#.......#.....#...#."
	"#...#...#.......#.....#..#.#..#.....#........#..#...#.#...#...#.....#.....##..#####..##.......#."
	"#.#.#...#.....##....##..#..#..####..####.....#...###...####.............##.............##....#.."
	"#...#...#....#........#.#####.....#.#...#...#...#...#.....#...............##..#####..##.....#..."
	"#...#...#...#.....#...#....#..#...#.#...#...#...#...#....#....#.....#.......#.......#..........."
	".###...###..#####..###.....#...###...###...#.....###...##..........#........................#..."
	"................................................................................................"
	"................................................................................................"
	"................................................................................................"
	".####...#...####...###..###...#####.#####..###..#...#..###....###.#...#.#.....#...#.##..#..###.."
	"#....#..#...#...#.#...#.#..#..#.....#.....#...#.#...#...#.......#.#..#..#.....#...#.##..#.#...#."
	"#.##.#.#.#..#...#.#.....#...#.#.....#.....#.....#...#...#.......#.#.#...#.....##.##.#.#.#.#...#."
	"#.##.#.#.#..####..#.....#...#.####..####..#..##.#####...#.......#.##....#.....##.##.#.#.#.#...#."
	"#.####.###..#...#.#.....#...#.#.....#.....#...#.#...#...#.......#.#.#...#.....#.#.#.#.#.#.#...#."
	"#.....#...#.#...#.#...#.#..#..#.....#.....#...#.#...#...#.......#.#..#..#.....#.#.#.#..##.#...#."
	".######...#.####...###..###...#####.#......####.#...#..###..####..#...#.#####.#...#.#..##..###.."
	"................................................................................................"
	"................................................................................................"
	"...................................................................###..#......###.............."
	"####...###..####...###..#####.#...#.#...#.#...#.#...#.#...#.#####..#....#........#....#........."
	"#...#.#...#.#...#.#...#...#...#...#.#...#.#.#.#.#...#.#...#.....#..#.....#.......#...#.#........"
	"#...#.#...#.#...#.#.......#...#...#.#...#.#.#.#..#.#..#...#....#...#.....#.......#..#...#......."
	"####..#...#.####...###....#...#...#..#.#..#.#.#...#....###....#....#......#......#.............."
	"#.....#...#.#...#.....#...#...#...#..#.#...#.#...#.#....#....#.....#......#......#.............."
	"#.....#..##.#...#.#...#...#...#...#...#....#.#..#...#...#...#......#.......#.....#.............."
	"#......####.#...#..###....#....###....#....#.#..#...#...#...#####..#.......#.....#.............."
	"...................................................................###......#..###........######"
	"................................................................................................"
	"............#...............#.........###.......#..................#.....##....................."
	"..#.........#...............#........#..........#.......#......#...#......#....................."
	"...#........#...............#........#..........#..................#......#....................."
	".......###..####...####..####..###..####...###..####...##.....##...#..#...#...##.#..####...###.."
	"..........#.#...#.#.....#...#.#...#..#....#...#.#...#...#......#...#.#....#...#.#.#.#...#.#...#."
	".......####.#...#.#.....#...#.#####..#....#...#.#...#...#......#...##.....#...#.#.#.#...#.#...#."
	"......#...#.#...#.#.....#...#.#......#....#...#.#...#...#......#...#.#....#...#.#.#.#...#.#...#."
	".......####.####...####..####..####..#.....####.#...#...#......#...#..#...#...#.#.#.#...#..###.."
	"..............................................#................#................................"
	"...........................................###..............###................................."
	".....................................................................#....#....#................"
	".........................#..........................................#.....#.....#..............."
	".........................#..........................................#.....#.....#..............."
	"####...####.#.##...####..###..#...#.#...#.#...#.#...#.#...#.#####...#.....#.....#..............."
	"#...#.#...#.##..#.#......#....#...#.#...#.#.#.#..#.#..#...#....#...#......#......#...##..#......"
	"#...#.#...#.#......###...#....#...#..#.#..#.#.#...#...#...#...#.....#.....#.....#...#..##......."
	"#...#.#...#.#.........#..#....#...#..#.#...#.#...#.#..#...#..#......#.....#.....#..............."
	"####...####.#.....####....###..####...#....#.#..#...#..####.#####...#.....#.....#..............."
	"#.........#...............................................#..........#....#....#................"
	"#.........#............................................###......................................"
	"................................................................................................"
	"................................................................................................"
	"................................................................................................"
	"................................................................................................"
};

FontData g_font_4x6 =
{
	false,
	4,6,16,
	32,127,
	128,64,NULL,
	64,36,
	".....#..#.#.#.#..#..#....#..##...#..#...#.#...................#."
	".....#..#.#.###..##...#.#.#.#...#....#...#...#................#."
	".....#......#.#.##...#...##.....#....#..###.###.....###......#.."
	"............###..##.#...#.#.....#....#...#...#..............#..."
	".....#......#.#.##....#.###......#..#...#.#.....##.......#..#..."
	".................#..............................#..............."
	".##..#..##..##....#.###..#..###..#...#............#.....#...##.."
	"#.#.##....#...#.#.#.#...#.....#.#.#.#.#..........#.......#....#."
	"#.#..#...#...#..###.##..##...##..#...##..#...#..#...###...#..#.."
	"#.#..#..#.....#...#...#.#.#..#..#.#...#..........#.......#......"
	"##..###.###.##....#.##...#...#...#...#...#..##....#.###.#....#.."
	"............................................#..................."
	"###..#..##...##.##..###.###..##.#.#.###...#.#.#.#...#.#.#.#..#.."
	"#.#.#.#.#.#.#...#.#.#...#...#...#.#..#....#.#.#.#...###.###.#.#."
	"#.#.###.##..#...#.#.##..##..#.#.###..#....#.##..#...###.#.#.#.#."
	"#...#.#.#.#.#...#.#.#...#...#.#.#.#..#..#.#.#.#.#...#.#.#.#.#.#."
	"###.#.#.##...##.##..###.#....##.#.#.###..#..#.#.###.#.#.#.#..#.."
	"................................................................"
	"##...#..##...##.###.#.#.#.#.#.#.#.#.#.#.###.##..#...##...#......"
	"#.#.#.#.#.#.#....#..#.#.#.#.#.#.#.#.#.#...#.#...#....#..#.#....."
	"##..#.#.##..###..#..#.#.#.#.###..#...#...#..#....#...#.........."
	"#...###.#.#...#..#..#.#.#.#.###.#.#..#..#...#.....#..#.........."
	"#....##.#.#.##...#..###..#..#.#.#.#..#..###.##....#.##.........."
	"...........................................................####."
	"##......#.........#.......#.....#....#...#..#....#.............."
	".#......#.........#......#......#...........#....#.............."
	".....##.##...##..##.###.###.###.##...#...#..#.#..#..###.##...#.."
	"....#.#.#.#.#...#.#.##...#..#.#.#.#..#...#..##...#..###.#.#.#.#."
	"....###.##...##..##..##..#....#.#.#..#...#..#.#..#..#.#.#.#..#.."
	"............................###.........##......................"
	".............................................##..#..##..#.#....."
	".................#...........................#...#...#.#.#......"
	"##...##.##...##.###.#.#.#.#.#.#.#.#.#.#.##..##...#...##........."
	"#.#.#.#.#....#...#..#.#.#.#.###..#..#.#..#...#...#...#.........."
	"##...##.#...##...##.###..#..###.#.#..#...##..##..#..##.........."
	"#.....#.............................#..........................."
};

FontData * g_pFont = &g_font_6x10;

//-------------------------------------------------------------------------------------

struct VertPCT
{
	float x, y, z;
	DWORD c;
	float u, v;
};

//----------

void DrawRectTex ( VertPCT *& cursor, int x1, int y1, float u1, float v1, int x2, int y2, float u2, float v2, DWORD color )
{
	cursor[0].x = float(x1) - 0.5f;
	cursor[0].y = float(y1) - 0.5f;
	cursor[0].z = 1.0f;  
	cursor[0].u = u1;
	cursor[0].v = v1;
	cursor[0].c = color;

	cursor[1].x = float(x2) - 0.5f;
	cursor[1].y = float(y1) - 0.5f;
	cursor[1].z = 1.0f;  
	cursor[1].u = u2;
	cursor[1].v = v1;
	cursor[1].c = color;

	cursor[2].x = float(x2) - 0.5f;
	cursor[2].y = float(y2) - 0.5f;
	cursor[2].z = 1.0f;  
	cursor[2].u = u2;
	cursor[2].v = v2;
	cursor[2].c = color;

	cursor += 3;
}

//----------

void RenderText (FontData * pFont, int pixelX, int pixelY, int consolePitch, bool handleTab, bool handleNewline, DWORD color, const char * text, int charCount )
{
	if(g_pDevice == NULL) return;

	if(!pFont->bInstalled) pFont->Install();

	PIXBeginNamedEvent(0xFFFFFFFF,"SimpleFont::RenderText");

	RenderState_2D_PCT state(pFont->pTexture);

	//----------
	// We allocate a buffer with enough space for one rect per character in the string.
	// We may actually draw fewer rects than that if the string contains newlines, tabs
	// or characters not defined by the font, so we zero the buffer to ensure that any 
	// unused rects in the buffer don't actually draw anything.

	VertPCT * v = NULL;

	g_pDevice->BeginVertices( D3DPT_RECTLIST, charCount * 3, sizeof(VertPCT), (void**)&v);

	memset(v, 0, 3 * charCount * sizeof(VertPCT) );

	//----------

	float charScaleX = float(pFont->charWidth) / float(pFont->textureWidth);
	float charScaleY = float(pFont->charHeight) / float(pFont->textureHeight);

	int cx = 0;
	int cy = 0;

	const char * tc = text;

	for(int i = 0; i < charCount; i++)
	{
		char c = *tc++;

		if(handleNewline && (c == '\n'))
		{
			cx = 0;
			cy++;
			continue;
		}

		if(handleTab && (c == '\t'))
		{
			cx = (cx + 8) & ~(8-1);
			continue;
		}

		if((c < pFont->charStart) || (c > pFont->charEnd))
		{
			c = ' ';
		}

		float u1 = charScaleX * ((c - pFont->charStart) % pFont->charPitch);
		float v1 = charScaleY * ((c - pFont->charStart) / pFont->charPitch);

		float u2 = u1 + charScaleX;
		float v2 = v1 + charScaleY;

		int x1 = pixelX + cx * pFont->charWidth;
		int y1 = pixelY + cy * pFont->charHeight;

		int x2 = x1 + pFont->charWidth;
		int y2 = y1 + pFont->charHeight;

		DrawRectTex(v,x1,y1,u1,v1,x2,y2,u2,v2,color);

		cx++;

		if(cx >= consolePitch)
		{
			cx = 0;
			cy++;
		}
	}

	//----------

	g_pDevice->EndVertices();

	PIXEndNamedEvent();
}

//-----------------------------------------------------------------------------

void Printf(int x, int y, const char * c, ...)
{
	char debugString[2048];

	va_list arglist;
	
	va_start(arglist, c);
	vsnprintf_s(debugString, _countof(debugString), _TRUNCATE, c, arglist);
	va_end(arglist);

	RenderText(g_pFont, x, y, 1024, true, true, 0xFFFFFFFF, debugString, strlen(debugString));
}

//----------

void Printf(int x, int y, DWORD color, const char * c, ...)
{
	char debugString[2048];

	va_list arglist;
	
	va_start(arglist, c);
	vsnprintf_s(debugString, _countof(debugString), _TRUNCATE, c, arglist);
	va_end(arglist);

	RenderText(g_pFont, x, y, 1024, true, true, color, debugString, strlen(debugString));
}

//-----------------------------------------------------------------------------

void Print ( int x, int y, const char * c, int count )
{
	Print(x,y,0xFFFFFFFF,c,count);
}

void Print ( int x, int y, DWORD color, const char * c, int count )
{
	RenderText(g_pFont,x,y,1024,false,false,color,c,count);
}

//----------

void PrintBlock ( int x, int y, int width, int height, DWORD color, const char * c )
{
	RenderText(g_pFont,x,y,width,false,false,color,c,width*height);
}

//-----------------------------------------------------------------------------

int getWidth ( void )
{
	return g_pFont->charWidth;
}

int getHeight ( void )
{
	return g_pFont->charHeight;
}

//-----------------------------------------------------------------------------

}; // namespace SimpleFont

}; // namespace MGSToolbox

#endif // USE_MGSTOOLBOX